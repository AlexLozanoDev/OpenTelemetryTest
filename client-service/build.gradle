plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.client'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Imports para instrumentar con OpenTelemetry
	// implementation(platform("io.opentelemetry:opentelemetry-bom:1.36.0"));
    // implementation("io.opentelemetry:opentelemetry-api");

	//import para intrumentacion con micrometer
	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	runtimeOnly 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-api:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-context:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-trace:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-metrics:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-common:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-common:1.29.0'	
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.29.0'	
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.29.0'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv:1.29.0-alpha'	

	implementation 'io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.29.0-alpha'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
